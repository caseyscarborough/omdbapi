{"name":"omdbapi","tagline":"A very easy to use API wrapper for getting movie information from omdbapi.com.","body":"# omdbapi\r\n\r\n[![Gem Version](https://badge.fury.io/rb/omdbapi.png)](http://badge.fury.io/rb/omdbapi)\r\n\r\nThis gem is a simple and easy to use wrapper for the [omdbapi.com](http://omdbapi.com/) API. This API allows you to pull almost any type of information about a show or movie, and uses information from IMDb. \r\n\r\n## Documentation\r\n\r\nThe complete documentation for the gem can be viewed at [rdoc.info/gems/omdbapi/frames](http://rdoc.info/gems/omdbapi/frames).\r\n\r\n## Installation\r\n\r\n### Requirements\r\n\r\n* Ruby v1.9.3 or later\r\n\r\n### Installing\r\n\r\nYou can install the gem by adding it your application's Gemfile:\r\n\r\n```ruby\r\ngem 'omdbapi'\r\n```\r\n\r\nAnd then execute:\r\n\r\n```bash\r\n$ bundle\r\n```\r\n\r\nOr you can install it manually by issuing the following command:\r\n\r\n```bash\r\n$ gem install omdbapi\r\n```\r\n\r\n## Usage\r\n\r\n```ruby\r\nrequire 'omdbapi'\r\n```\r\n### Title\r\n\r\nYou can get a movie or TV show's information in a Hash by using the title method, shown below:\r\n\r\n```ruby\r\ngame_of_thrones = OMDB.title('Game of Thrones')\r\n# => {:title=>\"Game of Thrones\", :year=>\"2011\", :rated=>\"TV-MA\", :released=>\"17 Apr 2011\", :runtime=>\"1 h\", :genre=>\"Adventure, Drama, Fantasy\", :director=>\"N/A\", :writer=>\"David Benioff, D.B. Weiss\", :actors=>\"Peter Dinklage, Lena Headey, Maisie Williams, Emilia Clarke\", :plot=>\"Seven noble families fight for control of the mythical land of Westeros.\", :poster=>\"http://ia.media-imdb.com/images/M/MV5BNTY2MzAxNzM0Ml5BMl5BanBnXkFtZTcwNDA0MDkxOQ@@._V1_SX300.jpg\", :imdb_rating=>\"9.4\", :imdb_votes=>\"382,638\", :imdb_id=>\"tt0944947\", :type=>\"series\", :response=>\"True\"} \r\ngame_of_thrones.title # => \"Game of Thrones\"\r\ngame_of_thrones.year  # => \"2011\"\r\ngame_of_thrones.rated # => \"TV-MA\"\r\n# etc...\r\n```\r\n\r\nThis function will return a Hash with the following information about the title:\r\n\r\n```ruby\r\n:title, :year, :rated, :released, :runtime, :genre, :director, :writer, \r\n:actors, :plot, :poster, :imdb_rating, :imdb_votes, :imdb_id, :type\r\n```\r\n\r\n### Search\r\n\r\nYou can find a title by using the find method:\r\n\r\n```ruby\r\nresults = OMDB.find('Star Wars')\r\n# => [{:title=>\"Star Wars\", :year=>\"1977\", :imdb_id=>\"tt0076759\", :type=>\"movie\"}, {:title=>\"Star Wars: Episode V - The Empire Strikes Back\", :year=>\"1980\", :imdb_id=>\"tt0080684\", :type=>\"movie\"}, {:title=>\"Star Wars: Episode VI - Return of the Jedi\", :year=>\"1983\", :imdb_id=>\"tt0086190\", :type=>\"movie\"}, {:title=>\"Star Wars: Episode I - The Phantom Menace\", :year=>\"1999\", :imdb_id=>\"tt0120915\", :type=>\"movie\"}, {:title=>\"Star Wars: Episode III - Revenge of the Sith\", :year=>\"2005\", :imdb_id=>\"tt0121766\", :type=>\"movie\"}, {:title=>\"Star Wars: Episode II - Attack of the Clones\", :year=>\"2002\", :imdb_id=>\"tt0121765\", :type=>\"movie\"}, {:title=>\"Star Wars: The Clone Wars\", :year=>\"2008\", :imdb_id=>\"tt1185834\", :type=>\"movie\"}, {:title=>\"Star Wars: Clone Wars\", :year=>\"2003\", :imdb_id=>\"tt0361243\", :type=>\"series\"}, {:title=>\"Star Wars: The Clone Wars\", :year=>\"2008\", :imdb_id=>\"tt0458290\", :type=>\"series\"}, {:title=>\"The Star Wars Holiday Special\", :year=>\"1978\", :imdb_id=>\"tt0193524\", :type=>\"movie\"}]\r\nresults.each { |r| puts r.title }\r\n# etc...\r\n```\r\n\r\nThis method returns an Array of search results. Each search result is a Hash with the following information about the result:\r\n\r\n```ruby\r\n:title, :year, :imdb_id, :type\r\n```\r\n\r\n### Find by IMDb ID\r\n\r\nYou can find a title by it's IMDb id using the id method:\r\n\r\n```ruby\r\nlost = OMDB.id('tt0411008')\r\n# => {:title=>\"Lost\", :year=>\"2004\", :rated=>\"TV-14\", :released=>\"22 Sep 2004\", :runtime=>\"42 min\", :genre=>\"Adventure, Drama, Fantasy, Mystery, Sci-Fi, Thriller\", :director=>\"N/A\", :writer=>\"J.J. Abrams, Jeffrey Lieber\", :actors=>\"Matthew Fox, Jorge Garcia, Evangeline Lilly, Naveen Andrews\", :plot=>\"The survivors of a plane crash are forced to live with each other on a remote island, a dangerous new world that poses unique threats of its own.\", :poster=>\"http://ia.media-imdb.com/images/M/MV5BMjA3NzMyMzU1MV5BMl5BanBnXkFtZTcwNjc1ODUwMg@@._V1_SX300.jpg\", :imdb_rating=>\"8.3\", :imdb_votes=>\"160,182\", :imdb_id=>\"tt0411008\", :type=>\"series\", :response=>\"True\"} \r\nlost.released    # => \"22 Sep 2004\"\r\nlost.imdb_rating # => \"8.3\"\r\n# etc...\r\n```\r\n\r\nThis method will return a Hash of the title's properties, exactly as the title method.\r\n\r\n## Running the Tests\r\n\r\nThe test suite is written using RSpec, and can be run by issuing the following command from the root of the repository:\r\n\r\n```bash\r\n$ rspec spec\r\n```\r\n\r\n## Contributing\r\n\r\nPlease feel free to contribute to the project by following the options below.\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}